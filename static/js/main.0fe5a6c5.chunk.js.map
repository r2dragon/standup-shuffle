{"version":3,"sources":["img/the-carlton.gif","components/header.js","components/rando.js","components/input.js","components/home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Nav","styled","div","HeaderText","src","Carlton","alt","Rando","props","useState","data","inputArray","returnArray","setReturnArray","editing","RondoContainer","Textarea","textarea","useEffect","undefined","array","i","length","j","Math","floor","random","shuffleArray","value","map","item","TextBox","input","Input","inputValue","setInputValue","val","setVal","type","onChange","e","target","onClick","Home","Page","search","useLocation","params","setParams","inputVal","setInputVal","useMemo","x","Y","URLSearchParams","get","getList","console","log","str","Array","split","strToArray","App","basename","hashtype","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,MAA0B,wC,OCoCxBA,I,IAAAA,EAhCjB,WAEI,IAAMC,EAAMC,IAAOC,IAAV,sRAYHC,EAAaF,IAAOC,IAAV,8KAUhB,OACE,eAACF,EAAD,WACC,qBAAKI,IAAKC,EAASC,IAAI,SACvB,eAACH,EAAD,qBAAmB,uBAAnB,kBC+CQI,I,EAAAA,EA1Ef,SAAeC,GAEX,MAAmCC,mBAASD,EAAME,MAAlD,mBAAMC,EAAN,KACA,GADA,KACqCF,sBAArC,mBAAMG,EAAN,KAAmBC,EAAnB,KACA,EAA6BJ,oBAAS,GAAtC,mBAAMK,EAAN,KAEMC,GAFN,KAEuBd,IAAOC,IAAV,yNAGPY,EAAU,MAAQ,MAChBA,EAAU,UAAY,YAM/BE,EAAWf,IAAOgB,SAAV,6KA2Bd,OAjBAC,qBAAU,gBAEYC,IAAfR,GAMP,SAAsBS,GAClB,IAAI,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACtC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADJ,EAEf,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAF+B,KAE3BD,EAAMG,GAFqB,KAK1CV,EAAeO,GAXXO,CAAahB,KAGnB,CAACA,IAWCG,EAkBIA,EAEA,cAACC,EAAD,UAEI,cAACC,EAAD,CAAUY,MAAOjB,WAJxB,EAfG,cAACI,EAAD,UACI,6BACKH,GACGA,EAAYiB,KAAI,SAAAC,GAAI,OAChB,6BAAgBA,GAAPA,WCnD/BC,EAAU9B,IAAO+B,MAAV,0OAiCEC,I,EAAAA,EAvBf,YAA8C,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,cAEzB,EAAsB1B,mBAASyB,GAA/B,mBAAOE,EAAP,KAAYC,EAAZ,KAUA,OACI,8BACI,8CACI,cAACN,EAAD,CAASO,KAAK,OAAOV,MAAOQ,EAAKG,SAX7C,SAAsBC,GAClBH,EAAOG,EAAEC,OAAOb,UAWR,wBAAQc,QARpB,WACIP,EAAcC,IAON,0B,OCmCDO,MAzDf,WACE,IAAMC,EAAO3C,IAAOC,IAAV,6IAUF2C,EAAWC,cAAXD,OACR,EAA4BpC,mBAAS,IAArC,mBAAOsC,EAAP,KAAeC,EAAf,KACA,EAAgCvC,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiBC,EAAjB,KA+BA,OA7BaC,mBAAQ,WACnB,OAGF,SAAiBC,GACf,IACMC,EADO,IAAIC,gBAAgBF,GAClBG,IAAI,QACT,OAANF,EACFH,EAAYG,IAGZL,EAAU,CAAC,UAAW,QAAS,cAC/BE,EAAY,4BAXPM,CAAQX,KACf,CAACA,IAoBH3B,qBAAU,WACRuC,QAAQC,IAAIT,GANd,SAAoBU,GAClB,IAAMC,EAAQD,EAAIE,MAAM,KACxBb,EAAUY,GAKVE,CAAWb,KACX,CAACA,IAKD,eAACL,EAAD,WACE,cAAC,EAAD,IACCG,GACC,qCACE,cAAC,EAAD,CAAOb,WAAYe,EAAUd,cAAee,IAC5C,cAAC,EAAD,CAAOxC,KAAMqC,W,OC1CRgB,MAZf,WAGE,OACE,cAAC,IAAD,CAAQC,SAAS,IAAIC,SAAS,QAA9B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,WCGlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0fe5a6c5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/the-carlton.49c82473.gif\";","import { useState, useEffect } from \"react\";\nimport styled from '@emotion/styled'\nimport Carlton from \"../img/the-carlton.gif\"\n\nfunction Header() {\n\n    const Nav = styled.div`\n        background-color: #333;\n        color: #fff;\n        width: 98%;\n        height: 40px;\n        display: flex;\n        flex-direction: row;\n        align-content: flex-start;\n        padding: 15px 1%;\n        border-radius: 10px;\n    `\n\n    const HeaderText = styled.div`\n        margin: 0 10px;\n        font-size: 1.2em;\n        font-weight: 600;\n        color: #ccc;\n        font-family:'VT323' !important;\n    `\n    \n\n\n    return (\n      <Nav>\n       <img src={Carlton} alt=\"logo\" />\n       <HeaderText>Standup<br /> Shuffle</HeaderText>\n      </Nav>\n    );\n  }\n  \n  export default Header;","import { React, useState, useEffect } from \"react\";\nimport styled from '@emotion/styled'\n\n\nfunction Rando(props) {\n\n    const[inputArray, setInputArray] = useState(props.data);\n    const[returnArray, setReturnArray] = useState();\n    const[editing, setEditing] = useState(false);\n\n    const RondoContainer = styled.div`\n        background-color: #222;\n        border-radius: 10px;\n        width: ${editing ? '96%' : '92%'}; \n        padding: ${editing ? '15px 2%' : '15px 4%'}; \n        margin: 20px 0;\n        overflow: hidden;\n        font-size: 2em;\n    `\n\n    const Textarea = styled.textarea`\n        background-color: #eee;\n        border-radius: 5px 5px 0 5px;\n        width: 95%;\n        height: 150px;\n        padding: 10px;\n    `\n\n    \n\n    useEffect(()=> {\n\n        if(inputArray !== undefined) {\n            shuffleArray(inputArray)\n        }\n\n    },[inputArray]);\n\n    function shuffleArray(array) {\n        for(let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n\n        setReturnArray(array)\n    }\n\n    if(!editing){\n\n        return (\n            <RondoContainer>\n                <ol>\n                    {returnArray &&\n                        returnArray.map(item =>\n                            <li key={item}>{item}</li>\n                        )   \n                    }\n                </ol>\n                \n            </RondoContainer>\n    \n        );\n\n    } \n\n    else if(editing) {\n        return (\n            <RondoContainer>\n                \n                <Textarea value={inputArray} />\n\n            </RondoContainer>\n    \n        );\n    }\n    \n}\n\nexport default Rando;\n","import { React, useMemo, useEffect, useState } from \"react\";\nimport styled from '@emotion/styled'\n\nconst TextBox = styled.input`\n    width: 98.5%;\n    margin: 20px 1% 20px 0;\n    padding: 20px 0 20px 1%;\n    font-size: 2em;\n    border-radius: 10px;\n    background-color: #101010;\n    border: 2px solid #ccc;\n    color: #ccc;\n  `\nfunction Input ({inputValue, setInputValue}) {\n\n    const [val, setVal] = useState(inputValue);\n\n    function handleChange(e) {\n        setVal(e.target.value);\n    }\n\n    function submit() {\n        setInputValue(val);\n    }\n\n    return (\n        <div>\n            <label>Attendees\n                <TextBox type=\"text\" value={val} onChange={handleChange} />\n                <button onClick={submit}>Submit</button>\n            </label>\n            \n        </div>\n    );\n}\n\nexport default Input;","import { React, useMemo, useEffect, useState } from \"react\";\nimport Header from \"./header.js\"\nimport Rando from \"./rando.js\"\nimport Input from \"./input.js\";\nimport styled from '@emotion/styled'\nimport { useLocation } from \"react-router-dom\";\n\nfunction Home() {\n  const Page = styled.div`\n    width: 90%;\n    background-color: #101010;\n    color: #fff;\n    padding: 50px 5%;\n    display: block;\n  `\n\n  \n\n  const { search } = useLocation();\n  const [params, setParams] = useState([]);\n  const [inputVal, setInputVal] = useState(\"\");\n  \n  const list = useMemo(() => {\n    return getList(search)\n  },[search])\n\n  function getList(x) {\n    const list = new URLSearchParams(x);\n    const Y = list.get(\"list\")\n    if (Y !== null) {\n      setInputVal(Y);  \n    }  \n    else {\n      setParams([\"ironman\", \"razor\", \"spiderman\"])\n      setInputVal(\"ironman,razor,spiderman\")\n    }\n    \n  }\n\n  function strToArray(str) {\n    const Array = str.split(\",\");\n    setParams(Array);\n  }\n\n  useEffect(() => {\n    console.log(inputVal);\n    strToArray(inputVal)\n  },[inputVal])\n\n\n  \n  return (\n    <Page>\n      <Header />\n      {params &&\n        <>\n          <Input inputValue={inputVal} setInputValue={setInputVal} />\n          <Rando data={params} />\n        </>\n      }\n    </Page>\n  );\n}\n\nexport default Home;\n","import Home from \"./components/home.js\"\nimport {HashRouter as Router, Route, Routes} from 'react-router-dom';\n\nfunction App() {\n  \n  \n  return (\n    <Router basename=\"/\" hashtype=\"slash\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} /> \n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}