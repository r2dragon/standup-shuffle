{"version":3,"sources":["img/the-carlton.gif","components/const.js","components/header.js","components/rando.js","components/button.js","img/carlton-face.png","components/input.js","components/url.js","components/home.js","App.js","reportWebVitals.js","index.js"],"names":["mq","map","bp","linkColor","Header","Nav","styled","div","Const","HeaderText","src","Carlton","alt","Rando","props","useState","data","inputArray","returnArray","setReturnArray","RondoContainer","useMemo","undefined","array","i","length","j","Math","floor","random","shuffleArray","item","Button","button","PrimaryButton","children","onClick","TextBox","TextField","input","InputArea","Label","label","Input","inputValue","setInputValue","val","setVal","type","value","onChange","e","target","Url","href","A","Home","Page","Meta","search","useLocation","params","setParams","inputVal","setInputVal","date","Date","toLocaleString","url","strToArray","str","Array","split","useEffect","x","Y","URLSearchParams","get","getList","App","basename","hashtype","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4778919.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/the-carlton.49c82473.gif\";","export const breakpoints = [576, 768, 992, 1200]\nexport const mq = breakpoints.map(\n    bp => `@media (max-width: ${bp}px)`\n  )\n\nexport const linkColor = \"#c3c36f\";","\nimport styled from '@emotion/styled'\nimport Carlton from \"../img/the-carlton.gif\"\nimport * as Const from \"./const\"\n\nfunction Header() {\n\n\n    const Nav = styled.div`\n        color: #fff;\n        width: 100%;\n        height: 60px;\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        margin-bottom: 20px;\n        \n        img {\n          height: 50px;\n        }\n\n        ${Const.mq[0]} {\n          justify-content: center;\n        }\n    `\n\n    const HeaderText = styled.div`\n        margin: 0 10px;\n        font-size: 1.4em;\n        font-weight: 00;\n        color: #ccc;\n    `\n    \n\n\n    return (\n      <Nav>\n       <img src={Carlton} alt=\"logo\" />\n       <HeaderText><strong>Standup<br /> Shuffle</strong></HeaderText>\n      </Nav>\n    );\n  }\n  \n  export default Header;","import React, {useMemo,  useState } from \"react\";\nimport styled from '@emotion/styled'\nimport * as Const from \"./const.js\"\n\n\nconst Rando = (props) => {\n\n    const[inputArray, setInputArray] = useState(props.data);\n    const[returnArray, setReturnArray] = useState();\n    \n\n    \n    const RondoContainer = styled.div`\n        background-color: #222;\n        border-radius:5px;\n        width: 100%;\n        padding: 16px 4%;\n        margin: 20px 0;\n        overflow: hidden;\n        font-size: 1.2em;\n        \n    `\n\n    useMemo(()=> {\n\n        if(inputArray !== undefined) {\n            shuffleArray(inputArray)\n        }\n\n    },[inputArray]);\n\n\n\n    function shuffleArray(array) {\n        for(let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n\n        setReturnArray(array)\n    }\n    \n    return (\n        <>\n        <RondoContainer>\n            <ol>\n                {returnArray &&\n                    returnArray.map(item =>\n                        <li key={item}>{item}</li>\n                    )   \n                }\n            </ol>\n            \n        </RondoContainer>\n        </>\n\n    );\n\n\n    \n}\n\nexport default Rando;\n","import { React, useState } from \"react\";\nimport styled from '@emotion/styled'\nimport * as Const from \"./const.js\"\nimport CarltonFace from '../img/carlton-face.png'\nimport { Children } from \"react\";\n\nconst Button = styled.button`\n    height: 55px;\n    align-items: flex-start;    \n    background-color: #282828;\n    color: ${Const.linkColor};\n    width: 13%;\n    border-radius: 5px;\n    border: 1px solid ${Const.linkColor};\n    font-size: 1em;\n    display: inline-block;\n    cursor: pointer;\n    font-family: monospace, 'Courier New';\n\n    &:hover {\n        background-color: ${Const.linkColor};\n        color: #000;\n    }\n  \n\n    ${Const.mq[0]} {\n        position: absolute;\n        bottom: 20px;\n        width: 90%;\n        align-self: center;\n        justify-self: flex-end !important;\n    }\n`\n\nconst PrimaryButton = ({children, onClick}) => {\n\n    return(\n        <Button onClick={onClick}>\n            {children}\n        </Button>\n    )\n\n}\n\nexport default PrimaryButton","export default __webpack_public_path__ + \"static/media/carlton-face.9fe0f414.png\";","import { React, useState } from \"react\";\nimport styled from '@emotion/styled'\nimport * as Const from \"./const.js\"\nimport PrimaryButton from \"./button.js\";\n\nconst TextBox = styled.div`\n    width: 84%;\n    border-radius: 5px;\n    background-color: #101010;\n    border: 2px solid #333;\n    height: 60px;\n    overflow: hidden;\n\n    ${Const.mq[0]} {\n\n        width: 100%;\n     \n    }\n`\n\nconst TextField = styled.input`\n    width: 100%;\n    height: 60px;\n    position: relative;\n    padding: 12px 0 0 16px;\n    border: none;\n    line-height: normal;\n    background-color: transparent;\n    font-family: monospace, 'Courier New';\n    color: #ccc;\n    outline: none;\n    font-size: 1.2em;\n    box-shadow: 0px 4px 20px 0px transparent;\n    &:hover {\n        background-color: #111;\n        \n    }\n    &:focus {\n        background-color: #111;\n        \n    }\n\n`\n\nconst InputArea = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;    \n    margin: 10px 0;\n    align-items: center;\n    justify-content: space-between;\n    \n    ${Const.mq[0]} {\n\n        justify-content: center ;\n    }\n\n\n`\n\nconst Label = styled.label`\n    font-size: 10px;\n    margin: 10px 16px;\n    position: absolute;\n    z-index: 10;\n`\n\n\n\nconst Input = ({inputValue, setInputValue}) => {\n\n    const [val, setVal] = useState(inputValue);\n\n\n    function handleChange(e) {\n        setVal(e.target.value);\n    }\n\n    function submit() {\n        setInputValue(val);\n    }\n\n    return (\n        <InputArea>\n            \n                \n                <TextBox>\n                    <Label>Attendees</Label>\n                    <TextField type=\"text\" value={val} onChange={handleChange}  />\n                </TextBox>\n            \n            <PrimaryButton onClick={submit}>\n                Shuffle\n            </PrimaryButton>\n            \n            \n        </InputArea>\n    );\n}\n\nexport default Input;","import { React, useState } from \"react\";\nimport styled from '@emotion/styled'\nimport * as Const from \"./const.js\"\n\nconst Url = ({children, href}) => {\n\n    const A = styled.div`\n        padding: 16px;\n        margin: 10px 0;\n        background-color: #222;\n        border-radius: 5px;\n        width: 100%;\n        overflow: scroll;\n        \n\n        a {\n            color: ${Const.linkColor};\n            text-decoration: none;\n        }\n    `\n\n    return (    \n\n        <A>\n            <small>\n                Your URL: <br />\n            <a href={href} target=\"_blank\">\n                {children}\n            </a>\n            </small>\n        </A>\n\n    );\n    \n}\n\nexport default Url","import React, { useEffect, useState } from \"react\";\nimport Header from \"./header.js\"\nimport Rando from \"./rando.js\"\nimport Input from \"./input.js\";\nimport Url from \"./url.js\";\nimport styled from '@emotion/styled'\nimport * as Const from \"./const.js\"\nimport { useLocation } from \"react-router-dom\";\n\nfunction Home() {\n  const Page = styled.div`\n    width: 90%;\n    background-color: #101010;\n    color: #fff;\n    padding: 50px 5%;\n    display: block;\n    \n    ${Const.mq[0]} {\n      padding-top: 20px;\n    }\n    \n  `\n  \n  const Meta = styled.div`\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        margin-top: 20px;\n\n        a {\n          color: ${Const.linkColor};\n          text-decoration: none;\n        }\n\n        ${Const.mq[0]} {\n\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n         \n        }\n    `\n  \n\n  const { search } = useLocation();\n  const [params, setParams] = useState([]);\n  const [inputVal, setInputVal] = useState(\"\");\n  const date = new Date().toLocaleString()\n  const url = \"https://r2dragon.github.io/standup-shuffle/#/?list=\" + inputVal;\n  // const list = useMemo(() => {\n  //   return getList(search)\n  // },[search])\n\n  useEffect(() => {\n    getList(search);\n  },[search])\n\n  function getList(x) {\n    const list = new URLSearchParams(x);\n    const Y = list.get(\"list\")\n    if (Y !== null) {\n      setInputVal(Y);  \n      strToArray(Y)\n    }  \n    else {\n      setParams([\"Ant-Man\", \"Rogue\", \"Black Panther\", \"Elektra\", \"Iron Man\", \"Black Widow\", \"Spider-Man\"])\n      setInputVal(\"Ant-Man,Rogue,Black Panther,Elektra,Iron Man,Black Widow,Spider-Man\")\n    }\n    \n  }\n\n  function strToArray(str) {\n    const Array = str.split(\",\");\n    setParams(Array);\n  }\n\n  useEffect(() => {\n\n  },[inputVal])\n\n\n  const setIt = (val) => {\n    strToArray(val);\n    setInputVal(val);\n  }\n  \n  return (\n    <Page>\n      <Header />\n      {params &&\n        <>\n          <Input inputValue={inputVal} setInputValue={setIt} />\n          <Rando data={params} />\n\n          <Url href={url}>{url}</Url>\n\n          <Meta>\n            <small>Last Shuffle: {date}</small>\n            <small>Built with ❤️ by <a href=\"https://github.com/r2dragon\" target=\"_blank\">r2</a></small>\n          </Meta>\n        </>\n      }\n    </Page>\n  );\n}\n\nexport default Home;\n","import Home from \"./components/home.js\"\nimport {HashRouter as Router, Route, Routes} from 'react-router-dom';\n\nfunction App() {\n  \n  \n  return (\n    <Router basename=\"/\" hashtype=\"slash\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} /> \n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}